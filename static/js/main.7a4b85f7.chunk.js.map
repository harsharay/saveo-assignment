{"version":3,"sources":["Components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["GoogleApiWrapper","apiKey","props","useState","allMarkedLocations","setAllMarkedLocations","locationName","lat","lng","input","setInput","long","handleInputChange","e","name","target","value","prev","className","type","onChange","onClick","console","log","length","position","map","item","index","google","style","width","margin","height","initialCenter","zoom","t","coord","latLng","currentLat","currentLng","marker","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAkJeA,6BAAiB,CAACC,OAAQ,2CAA1BD,EA3IF,SAACE,GAAW,IAAD,EAEgCC,mBAAS,IAFzC,mBAEbC,EAFa,KAEOC,EAFP,OAIMF,mBAAS,CAC/BG,aAAc,GACdC,IAAK,GACLC,IAAK,KAPW,mBAIbC,EAJa,KAINC,EAJM,OAUsBP,mBAAS,CAC/CI,IAAK,GACLI,KAAM,KAZU,mBAedC,GAfc,UAeM,SAAAC,GACtB,IAAIC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MAErBN,GAAS,SAAAO,GACL,OAAO,2BACAA,GADP,kBAEKH,EAAQE,SA8CrB,OACI,qBAAKE,UAAU,YAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,gCACI,8CACA,uBAAOC,KAAK,OAAOL,KAAK,eAAeE,MAAOP,EAAMH,aAAcc,SAAUR,OAEhF,gCACI,+CACA,uBAAOO,KAAK,OAAOL,KAAK,MAAME,MAAOP,EAAMF,IAAKa,SAAUR,OAE9D,gCACI,gDACA,uBAAOO,KAAK,OAAOL,KAAK,MAAME,MAAOP,EAAMD,IAAKY,SAAUR,UAGlE,qBAAKM,UAAU,yBAAf,SACI,wBAAQA,UAAU,mBAAmBG,QA5DhC,WAErB,GADAC,QAAQC,IAAI,IACTnB,EAAmBoB,OAAS,EAAE,CACMf,EAA3BH,aADsB,IACRC,EAAaE,EAAbF,IAAKC,EAAQC,EAARD,IAE3BH,GAAsB,SAAAY,GAClB,MAAM,GAAN,mBACOA,GADP,CAEI,CACIH,KAAM,eACNW,SAAU,CACNlB,MACAC,eAgDJ,sBAGR,sBAAKU,UAAU,eAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,gDACA,gCACI,sBAAKA,UAAU,eAAf,UACI,+CACA,wCACA,2CAEJ,qBAAKA,UAAU,iBAAf,SACKd,EAAmBsB,KAAI,SAACC,EAAMC,GAC3B,OACI,sBAAiBV,UAAU,eAA3B,UACI,8BAAIU,EAAM,EAAV,KAAeD,EAAKb,QACpB,4BAAIa,EAAKF,SAASlB,MAClB,4BAAIoB,EAAKF,SAASjB,QAHZoB,QAQtB,sDAGR,qBAAKV,UAAU,OAAf,SACI,cAAC,MAAD,CACIW,OAAQ3B,EAAM2B,OACdC,MAAO,CAAEC,MAAO,iBAAkBC,OAAQ,OAAQC,OAAQ,kBAC1DC,cAAe,CACX3B,IAAK,mBACLC,IAAK,mBAETU,UAAU,YACViB,KAAM,EACNd,QA3EJ,SAACe,EAAGV,EAAKW,GACzBf,QAAQC,IAAI,SACZD,QAAQC,IAAI,GAAGc,GAFoB,IAG3BC,EAAWD,EAAXC,OACFC,EAAaD,EAAO/B,MACpBiC,EAAaF,EAAO9B,MAE1BE,GAAS,SAAAO,GACL,OAAO,2BACAA,GADP,IAEIX,aAAc,QACdC,IAAKgC,EACL/B,IAAKgC,QAsDG,SAWKpC,EAAmBsB,KAAI,SAACe,EAAQb,GAAT,OACpB,cAAC,SAAD,CAEAH,SAAUgB,EAAOhB,UADZG,qBC1HtBc,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7a4b85f7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport { withGoogleMap, GoogleMap, DirectionsRenderer } from 'react-google-maps';\r\n\r\n\r\nimport \"./Home.css\"\r\n\r\nconst Home = (props) => {\r\n\r\n    const [allMarkedLocations, setAllMarkedLocations] = useState([]) \r\n\r\n    const [input, setInput] = useState({\r\n        locationName: \"\",\r\n        lat: \"\",\r\n        lng: \"\"\r\n    })\r\n\r\n    const [currentMarker, setCurrentMarker] = useState({\r\n        lat: \"\",\r\n        long: \"\"\r\n    })\r\n\r\n    const handleInputChange = e => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        setInput(prev => {\r\n            return {\r\n                ...prev,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleAddMarkers = () => {\r\n        console.log(40)\r\n        if(allMarkedLocations.length < 5){\r\n            const { locationName, lat, lng } = input\r\n\r\n            setAllMarkedLocations(prev => {\r\n                return [\r\n                    ...prev,\r\n                    {\r\n                        name: \"locationName\",\r\n                        position: {\r\n                            lat,\r\n                            lng\r\n                        }\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n    const handleClick = (t, map, coord) => {\r\n        console.log(\"click\")\r\n        console.log(21,coord)\r\n        const { latLng } = coord;\r\n        const currentLat = latLng.lat();\r\n        const currentLng = latLng.lng();\r\n\r\n        setInput(prev => {\r\n            return {\r\n                ...prev,\r\n                locationName: \"empty\",\r\n                lat: currentLat,\r\n                lng: currentLng\r\n            }\r\n        })\r\n     \r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"home-root\">\r\n            <div className=\"content-group\">\r\n                <div className=\"top-block\">\r\n                    <div className=\"top-block-content\">\r\n                        <div>\r\n                            <p>Location Name</p>\r\n                            <input type=\"text\" name=\"locationName\" value={input.locationName} onChange={handleInputChange} />\r\n                        </div>\r\n                        <div>\r\n                            <p>Enter Latitude</p>\r\n                            <input type=\"text\" name=\"lat\" value={input.lat} onChange={handleInputChange} />\r\n                        </div>\r\n                        <div>\r\n                            <p>Enter Longitude</p>\r\n                            <input type=\"text\" name=\"lng\" value={input.lng} onChange={handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"top-block-button-block\">\r\n                        <button className=\"top-block-button\" onClick={handleAddMarkers}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-group\">\r\n                    <div className=\"display-coordinates\">\r\n                        <p>All Coordinates</p>\r\n                        <div>\r\n                            <div className=\"header-group\">\r\n                                <p>My coordinates</p>\r\n                                <p>Default</p>\r\n                                <p>Default</p>\r\n                            </div>\r\n                            <div className=\"locations-data\">\r\n                                {allMarkedLocations.map((item, index) => {\r\n                                    return (\r\n                                        <div key={index} className=\"header-group\">\r\n                                            <p>{index+1}. {item.name}</p>\r\n                                            <p>{item.position.lat}</p>\r\n                                            <p>{item.position.lng}</p>\r\n                                        </div>\r\n                                    )\r\n                                })} \r\n                            </div>\r\n                            <button>Show Route</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"map1\">\r\n                        <Map\r\n                            google={props.google}\r\n                            style={{ width: \"25% !important\", margin: \"auto\", height: \"41% !important\" }}\r\n                            initialCenter={{\r\n                                lat: 17.380275415679968,\r\n                                lng: 78.48421990628647 \r\n                            }}\r\n                            className=\"actualMap\"\r\n                            zoom={6}\r\n                            onClick={handleClick}\r\n                        >\r\n                            {allMarkedLocations.map((marker, index) => (\r\n                                <Marker\r\n                                key={index}\r\n                                position={marker.position}\r\n                            />\r\n                        ))}\r\n                        </Map>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoogleApiWrapper({apiKey: \"AIzaSyCicw2MoonjgBscZpmaYwPiVhfs287UQ84\"})(Home)","import React from \"react\"\nimport './App.css';\nimport Home from \"./Components/Home/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}